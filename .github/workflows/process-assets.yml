name: Process Poker Assets

on:
  workflow_dispatch:
    inputs:
      fps:
        description: "Frame extraction FPS for video"
        default: "2"
        required: true
      dup_thresh:
        description: "Near-duplicate Hamming distance threshold (smaller = stricter)"
        default: "4"
        required: true
      create_release:
        description: "Create a release and upload outputs"
        default: "false"
        required: true
  push:
    paths:
      - "*.mp4"
      - "*.zip"
      - "scripts/process_assets.py"

jobs:
  process:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install pillow imagehash

      - name: Run processing
        env:
          FPS: ${{ github.event.inputs.fps || 2 }}
          THRESH: ${{ github.event.inputs.dup_thresh || 4 }}
        run: |
          if [ ! -f scripts/process_assets.py ]; then
            echo "scripts/process_assets.py missing"; exit 1
          fi
          python scripts/process_assets.py --fps "$FPS" --dup_thresh "$THRESH"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: processed-assets
          path: |
            outputs/frames_raw.zip
            outputs/frames_clean.zip
            outputs/report.json

      - name: Create release (optional)
        if: ${{ github.event.inputs.create_release == 'true' }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: dataset-${{ github.run_number }}
          name: "Processed dataset #${{ github.run_number }}"
          files: |
            outputs/frames_raw.zip
            outputs/frames_clean.zip
            outputs/report.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}